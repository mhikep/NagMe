import React from 'react';

export default function ComponentMapping() {
  return (
    <div className="max-w-4xl mx-auto p-6 prose prose-lg">
      <h1>Component Mapping: Web to React Native</h1>
      
      <p>This document provides a detailed mapping of every web component to its React Native equivalent, including code examples and implementation notes.</p>

      <h2>UI Component Mappings</h2>
      
      <h3>Basic HTML â†’ React Native</h3>
      <div className="overflow-x-auto">
        <table className="table-auto w-full border-collapse border border-gray-300">
          <thead>
            <tr className="bg-gray-100">
              <th className="border border-gray-300 px-4 py-2">Web (HTML/JSX)</th>
              <th className="border border-gray-300 px-4 py-2">React Native</th>
              <th className="border border-gray-300 px-4 py-2">Notes</th>
            </tr>
          </thead>
          <tbody>
            <tr><td className="border border-gray-300 px-4 py-2">&lt;div&gt;</td><td className="border border-gray-300 px-4 py-2">&lt;View&gt;</td><td className="border border-gray-300 px-4 py-2">Main container component</td></tr>
            <tr><td className="border border-gray-300 px-4 py-2">&lt;p&gt;, &lt;span&gt;, &lt;h1&gt;-&lt;h6&gt;</td><td className="border border-gray-300 px-4 py-2">&lt;Text&gt;</td><td className="border border-gray-300 px-4 py-2">All text must be wrapped in Text</td></tr>
            <tr><td className="border border-gray-300 px-4 py-2">&lt;button&gt;</td><td className="border border-gray-300 px-4 py-2">&lt;TouchableOpacity&gt;</td><td className="border border-gray-300 px-4 py-2">TouchableOpacity for custom styling</td></tr>
            <tr><td className="border border-gray-300 px-4 py-2">&lt;input&gt;</td><td className="border border-gray-300 px-4 py-2">&lt;TextInput&gt;</td><td className="border border-gray-300 px-4 py-2">Styling is quite different</td></tr>
            <tr><td className="border border-gray-300 px-4 py-2">&lt;img&gt;</td><td className="border border-gray-300 px-4 py-2">&lt;Image&gt;</td><td className="border border-gray-300 px-4 py-2">Requires explicit width/height</td></tr>
          </tbody>
        </table>
      </div>

      <h2>ReminderCard Component Example</h2>
      
      <h3>Current Web Implementation</h3>
      <pre className="bg-gray-100 p-4 rounded-lg overflow-x-auto"><code>{`// components/dashboard/ReminderCard.jsx
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { CheckCircle2, Clock } from "lucide-react";

export default function ReminderCard({ reminder, onComplete }) {
  return (
    <Card className="p-6 bg-white hover:shadow-lg transition-all">
      <div className="flex items-start justify-between mb-4">
        <h3 className="text-lg font-semibold">{reminder.title}</h3>
        <Badge className="bg-blue-100 text-blue-800">
          {reminder.priority}
        </Badge>
      </div>
      <div className="flex items-center gap-2 text-sm text-slate-600">
        <Clock className="w-4 h-4" />
        {formatDueDate(reminder.due_date)}
      </div>
      <button onClick={() => onComplete(reminder.id)}>
        <CheckCircle2 className="w-5 h-5" />
        Complete
      </button>
    </Card>
  );
}`}</code></pre>

      <h3>React Native Equivalent</h3>
      <pre className="bg-gray-100 p-4 rounded-lg overflow-x-auto"><code>{`// components/ReminderCard.js
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import Icon from 'react-native-vector-icons/Feather';

export default function ReminderCard({ reminder, onComplete }) {
  return (
    <View style={styles.card}>
      <TouchableOpacity activeOpacity={0.8}>
        <View style={styles.header}>
          <Text style={styles.title}>{reminder.title}</Text>
          <View style={[styles.badge, priorityColors[reminder.priority]]}>
            <Text style={styles.badgeText}>{reminder.priority}</Text>
          </View>
        </View>
        
        <View style={styles.dateRow}>
          <Icon name="clock" size={14} color="#64748b" />
          <Text style={styles.dateText}>
            {formatDueDate(reminder.due_date)}
          </Text>
        </View>
        
        <TouchableOpacity 
          style={styles.completeButton}
          onPress={() => onComplete(reminder.id)}
        >
          <Icon name="check-circle" size={18} color="#10b981" />
          <Text style={styles.completeText}>Complete</Text>
        </TouchableOpacity>
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  card: {
    backgroundColor: 'white',
    borderRadius: 12,
    padding: 16,
    marginVertical: 6,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    elevation: 3,
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    marginBottom: 12,
  },
  title: {
    fontSize: 16,
    fontWeight: '600',
    color: '#1e293b',
    flex: 1,
  },
  // ... more styles
});`}</code></pre>

      <h2>Key Conversion Patterns</h2>
      
      <h3>Form Components</h3>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <h4>Web TextInput</h4>
          <pre className="bg-gray-100 p-3 text-sm"><code>{`<Input
  placeholder="Title"
  value={title}
  onChange={(e) => setTitle(e.target.value)}
  className="mt-2 h-12 text-lg"
/>`}</code></pre>
        </div>
        <div>
          <h4>React Native TextInput</h4>
          <pre className="bg-gray-100 p-3 text-sm"><code>{`<TextInput
  placeholder="Title"
  value={title}
  onChangeText={setTitle}
  style={styles.textInput}
/>`}</code></pre>
        </div>
      </div>

      <h3>Navigation</h3>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <h4>Web Router</h4>
          <pre className="bg-gray-100 p-3 text-sm"><code>{`<Link to={createPageUrl("Create")}>
  <Button>Create</Button>
</Link>`}</code></pre>
        </div>
        <div>
          <h4>React Native Navigation</h4>
          <pre className="bg-gray-100 p-3 text-sm"><code>{`<TouchableOpacity 
  onPress={() => navigation.navigate('Create')}
>
  <Text>Create</Text>
</TouchableOpacity>`}</code></pre>
        </div>
      </div>

      <h3>Storage</h3>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <h4>Web (localStorage)</h4>
          <pre className="bg-gray-100 p-3 text-sm"><code>{`localStorage.setItem('data', 
  JSON.stringify(reminders));
  
const data = JSON.parse(
  localStorage.getItem('data') || '[]'
);`}</code></pre>
        </div>
        <div>
          <h4>React Native (AsyncStorage)</h4>
          <pre className="bg-gray-100 p-3 text-sm"><code>{`await AsyncStorage.setItem('data', 
  JSON.stringify(reminders));
  
const data = JSON.parse(
  await AsyncStorage.getItem('data') || '[]'
);`}</code></pre>
        </div>
      </div>

      <h2>Animation Libraries</h2>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <h4>Web (Framer Motion)</h4>
          <pre className="bg-gray-100 p-3 text-sm"><code>{`<motion.div
  initial={{ opacity: 0, y: 20 }}
  animate={{ opacity: 1, y: 0 }}
  exit={{ opacity: 0, y: -20 }}
>
  Content
</motion.div>`}</code></pre>
        </div>
        <div>
          <h4>React Native (Reanimated)</h4>
          <pre className="bg-gray-100 p-3 text-sm"><code>{`<Animated.View
  entering={FadeInUp}
  exiting={FadeOutDown}
>
  Content
</Animated.View>`}</code></pre>
        </div>
      </div>

      <h2>Summary</h2>
      <p className="text-lg">
        This mapping provides the foundation for systematically converting each component from the web version to React Native while maintaining the same functionality and user experience.
      </p>
    </div>
  );
}